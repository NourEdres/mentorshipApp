{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams}from'react-router-dom';import{useUser}from'./UserContext';import{LightAsync as SyntaxHighlighter}from'react-syntax-highlighter';import{docco}from'react-syntax-highlighter/dist/esm/styles/hljs';import io from'socket.io-client';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const CodeBlockPage=()=>{const[code,setCode]=useState('');const[title,setTitle]=useState('');const[correctCode,setCorrectCode]=useState('');const[error,setError]=useState(null);const[isTyping,setIsTyping]=useState(false);// State for typing indicator\nconst{user}=useUser();const{id}=useParams();const[socket,setSocket]=useState(null);useEffect(()=>{const newSocket=io('https://mentorshipapp.onrender.com');setSocket(newSocket);const fetchCodeBlock=async()=>{try{const response=await fetch(\"https://mentorshipapp.onrender.com/api/codeblocks/\".concat(id));if(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();setCode(data.code);setTitle(data.title);setCorrectCode(data.correctCode);}catch(error){setError(error);}};fetchCodeBlock();newSocket.on('codeUpdated',updatedCode=>{setCode(updatedCode);});newSocket.on('typing',()=>{setIsTyping(true);setTimeout(()=>setIsTyping(false),2000);});return()=>{newSocket.off('codeUpdated');newSocket.off('typing');newSocket.disconnect();};},[id]);const handleSave=async()=>{if(user.role!=='Mentor'){try{const response=await fetch(\"https://mentorshipapp.onrender.com/api/codeblocks/\".concat(id),{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify({title,code})});if(!response.ok){const errorText=await response.text();throw new Error(\"Network response was not ok: \".concat(errorText));}console.log('Code block updated successfully');if(socket&&socket.connected){socket.emit('updateCode',{code});}checkCorrectCode();}catch(error){console.error('Error updating code block:',error);setError(error.message);}}};const checkCorrectCode=async()=>{const celebrationSpan=document.querySelector('.material-symbols-outlined');if(code===correctCode){if(!celebrationSpan){const newSpan=document.createElement('span');newSpan.classList.add('material-symbols-outlined');newSpan.textContent=\"celebration\";document.body.appendChild(newSpan);setTimeout(()=>{newSpan.remove();},2000);}}else{if(celebrationSpan){celebrationSpan.remove();}}};const handleCodeChange=e=>{const updatedCode=e.target.value;setCode(updatedCode);if(user.role!=='Mentor'){socket.emit('typing');socket.emit('updateCode',{code:updatedCode});}};if(error)return/*#__PURE__*/_jsx(\"p\",{children:\"Error loading code block.\"});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Code Block\"}),/*#__PURE__*/_jsx(\"h4\",{children:title}),user.role==='Mentor'?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(SyntaxHighlighter,{language:\"javascript\",style:docco,children:code}),isTyping&&/*#__PURE__*/_jsx(\"p\",{children:\"The mentee is typing...\"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"textarea\",{rows:\"10\",cols:\"50\",value:code,onChange:handleCodeChange}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSave,children:\"Save Changes\"})]})]});};export default CodeBlockPage;","map":{"version":3,"names":["React","useState","useEffect","useParams","useUser","LightAsync","SyntaxHighlighter","docco","io","jsx","_jsx","jsxs","_jsxs","CodeBlockPage","code","setCode","title","setTitle","correctCode","setCorrectCode","error","setError","isTyping","setIsTyping","user","id","socket","setSocket","newSocket","fetchCodeBlock","response","fetch","concat","ok","Error","data","json","on","updatedCode","setTimeout","off","disconnect","handleSave","role","method","headers","body","JSON","stringify","errorText","text","console","log","connected","emit","checkCorrectCode","message","celebrationSpan","document","querySelector","newSpan","createElement","classList","add","textContent","appendChild","remove","handleCodeChange","e","target","value","children","language","style","rows","cols","onChange","onClick"],"sources":["C:/Users/user/Desktop/MentorshipApp/client/src/CodeBlockPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useUser } from './UserContext';\r\nimport { LightAsync as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\nimport io from 'socket.io-client';\r\n\r\nconst CodeBlockPage = () => {\r\n    const [code, setCode] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [correctCode, setCorrectCode] = useState('');\r\n    const [error, setError] = useState(null);\r\n    const [isTyping, setIsTyping] = useState(false); // State for typing indicator\r\n    const { user } = useUser();\r\n    const { id } = useParams();\r\n    const [socket, setSocket] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const newSocket = io('https://mentorshipapp.onrender.com');\r\n        setSocket(newSocket);\r\n\r\n        const fetchCodeBlock = async () => {\r\n            try {\r\n                const response = await fetch(`https://mentorshipapp.onrender.com/api/codeblocks/${id}`);\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                const data = await response.json();\r\n                setCode(data.code);\r\n                setTitle(data.title);\r\n                setCorrectCode(data.correctCode);\r\n            } catch (error) {\r\n                setError(error);\r\n            }\r\n        };\r\n        fetchCodeBlock();\r\n\r\n        newSocket.on('codeUpdated', (updatedCode) => {\r\n            setCode(updatedCode);\r\n        });\r\n\r\n        newSocket.on('typing', () => {\r\n            setIsTyping(true);\r\n            setTimeout(() => setIsTyping(false), 2000);\r\n        });\r\n\r\n        return () => {\r\n            newSocket.off('codeUpdated');\r\n            newSocket.off('typing');\r\n            newSocket.disconnect();\r\n        };\r\n    }, [id]);\r\n\r\n    const handleSave = async () => {\r\n        if (user.role !== 'Mentor') {\r\n            try {\r\n                const response = await fetch(`https://mentorshipapp.onrender.com/api/codeblocks/${id}`, {\r\n                    method: 'PUT',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({ title, code }),\r\n                });\r\n    \r\n                if (!response.ok) {\r\n                    const errorText = await response.text();\r\n                    throw new Error(`Network response was not ok: ${errorText}`);\r\n                }\r\n                console.log('Code block updated successfully');\r\n                \r\n                if (socket && socket.connected) {\r\n                    socket.emit('updateCode', { code });\r\n                }\r\n                checkCorrectCode();\r\n            } catch (error) {\r\n                console.error('Error updating code block:', error);\r\n                setError(error.message);\r\n            }\r\n        }\r\n    };\r\n\r\n    const checkCorrectCode = async () => {\r\n        const celebrationSpan = document.querySelector('.material-symbols-outlined');\r\n        if (code === correctCode) {\r\n            if (!celebrationSpan) {\r\n                const newSpan = document.createElement('span');\r\n                newSpan.classList.add('material-symbols-outlined');\r\n                newSpan.textContent = \"celebration\";\r\n                document.body.appendChild(newSpan);\r\n                setTimeout(() => {\r\n                    newSpan.remove();\r\n                }, 2000);\r\n            }\r\n           \r\n        } else {\r\n            if (celebrationSpan) {\r\n                celebrationSpan.remove();\r\n            }\r\n        }\r\n    };\r\n    \r\n\r\n    const handleCodeChange = (e) => {\r\n        const updatedCode = e.target.value;\r\n        setCode(updatedCode);\r\n        if (user.role !== 'Mentor') {\r\n            socket.emit('typing');\r\n            socket.emit('updateCode', { code: updatedCode });\r\n        }\r\n    };\r\n\r\n    if (error) return <p>Error loading code block.</p>;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Code Block</h2>\r\n            <h4>{title}</h4>\r\n            {user.role === 'Mentor' ? (\r\n                <div>\r\n                    <SyntaxHighlighter language=\"javascript\" style={docco}>\r\n                        {code}\r\n                    </SyntaxHighlighter>\r\n                    {isTyping && <p>The mentee is typing...</p>}\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <textarea rows=\"10\" cols=\"50\" value={code} onChange={handleCodeChange} />\r\n                    <br />\r\n                    <button onClick={handleSave}>Save Changes</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CodeBlockPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}